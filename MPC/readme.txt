scp_mpc.mで2衛星のスラスター衛星のscp-mpcができる
scp_mpc1.mで1衛星のスラスター衛星のscp-mpcができる
scp_mpc3.mは3衛星のスラスター衛星のscp-mpcの失敗作

F2I.mでスラスター入力を距離の4乗に反比例する入力に変える。
scp_mpc1_nonl.mでscp_mpc1.mとF2I.mで求めたノミナル軌道から、距離の4乗に反比例した力を発生できる場合の最適軌道を求められる。
(trust regionを0.0001ぐらいにすると線形誤差が0.01ぐらいに収まる。)

scp_mpc2_nonl.mでscp_mpc.mとF2I.mで求めた2衛星のノミナル軌道から、距離の4乗に反比例した力を発生できる場合の最適軌道を求められる。

scp_mpc22_nonl.mで相対距離を利用した入力。scp_mpc.mとF2I2.mで求めた2衛星のノミナル軌道から、距離の4乗に反比例した力を発生できる場合の最適軌道を求められる。



check_condition.mでノミナル軌道が拘束条件を満たしているかチェック。
symbolic_test.mtとsymbolic_test2でfarfieldの微分の検証をしている。
test2はtestの上位互換。

test_far_field_inv.mで所望力から2つの衛星の電流を計算している。

scp_mpc_EMFF_nonl.mで相対距離と電流ベクトルを利用したもの。far-field微分。
scp_mpc.mとF2myu.mで求めた2衛星のノミナル軌道から、電磁力を用いた場合の最適軌道を求められる。

scp_mpc_EMFF2_nonl.mで相対距離と電流ベクトルを利用したもの。far-fieldを変形して、磁気モーメントに関して線形化。
scp_mpc.mとF2myu2.mで求めた2衛星のノミナル軌道から、電磁力を用いた場合の最適軌道を求められる。

scp_mpc_EMFF3_nonl.mで相対距離と電流ベクトルを利用したもの。far-fieldを変形して、磁気モーメントに関して線形化。

plot_s.mで綺麗に動画化。

plo_convergenceで収束の様子をグラフ化。

spc_mpc_recordでレコード盤軌道への展開のスラスターのscp_mpc
scp_mpc_EMFF_nonl_recordで片側固定のfar fieldで最適化.spc_mpc_recordとF2myu2を使う

scp_mpc_stabilization.mで2衛星の安定化制御を取り込んだ最適化。最終状態の拘束条件は4つになってる。
scp_mpc_stabilization_minmax.mでscp_mpc_stabilizationの最大値最小化問題の表現を変更。
scp_mpc_stabilization_minmax5.mでscp_mpc_stabilizationの5基バージョン
scp_mpc_stabilization_minmax100.mでscp_mpc_stabilizationの100基バージョン

takahashi_attenuation.mで高橋さんから送られた安定化制御則を高橋さんの座標系で実装。単純なフィードバック制御。

scp_mpc_num.m 3基以上のscp-mpcを実装。

takahashi_NN.mは高橋さんのNNモデル。
takahashi_NN2.mは高橋さんのトルクと力のNNモデル。これを使ってスラスターから電磁力モデルに変換できる。

★scp_mpc_stabilization_min_energy.mは総Csの最小化を目指すもの。
scp_mpc_EMFF_stabilization_min_energy.mは総Csの最小化を目指すもので、最大推力は太陽光パネルの生成電力によって決まる。微妙に荒れてる。
scp_mpc_EMFF_nonl_stabilization_min_energy.mはscp_mpc_EMFF_stabilization_min_energyを使ってscp-mpcしようと思ったけど、断念。

scp_mpc_stabilization_optimal_power.mはNNモデルを用いて、電力の最小化をするもの未完成。NNモデルが完成する見込みがないためボツ

F2myu2.m力を磁気ダイポールに変換する。

＜fnminconによる最適化＞諦め
takahashi_attenuation2.mでスラスターを使ってエネルギー減衰制御ができる。入力の順番を修正したりとtakahashi_attenuationの修正版
takahashi_attenuation3.mでtakahashi_attenuation2.mに衝突防止制御を追加したもの。
takahashi_attenuation_EMFF.mで電磁力を使ってエネルギー減衰制御ができる。
scp_mpc_stabilization_min_energy_fmincon.mでスラスターの凸最適化をfminconで解く。scp_mpc_EMFF_stabilization_min_energy.mのfminconバージョン。takahashi_attenuation2.mを実行して最適化の初期値を作る必要がある。
初期値は合わせる必要がある。takahashi_attenuation3を使っても大して変わらないですわ。
scp_mpc_stabilization_min_energy_fmincon2.mは1衛星分の入力で2衛星分の最適化を行う。scp_mpc_stabilization_min_energy_fmincon2の方が変数も拘束条件も少ないからよさげ。


scp_mpc_EMFF_nonl_stabilization_min_energy_fmincon.mでtakahashi_attenuation_EMFFをノミナル軌道として最適化をしようとしたけど遅すぎてどうしようもない。￥

<ペアの最適性も担保するために、短いステップでscp-mpc>
scp_mpc_stabilization_min_energy_fmincon2.mは1衛星分の入力で2衛星分の最適化を行う。scp_mpc_stabilization_min_energy_fmincon2の方が変数も拘束条件も少ないからよさげ。
takahashi_attenuation3.mでtakahashi_attenuation2.mに衝突防止制御を追加したもの
takahashi_attenuation_EMFF.mで電磁力を使ってエネルギー減衰制御ができる。
scp_mpc_EMFF_nonl_stabilization_min_energy.mは片方の電流入力のノミナル軌道からscp-mpc。ノミナル軌道はtakahashi_attenuation_EMFF.mを使いましょう。



kdtree.mで100基の衛星の中から1つの衛星に注目して、その周囲の衛星を抽出する。ペア決めに使えそう。